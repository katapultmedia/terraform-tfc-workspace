name: terraform

on:
  - pull_request

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set - Env Vars
      id: setting_dev_env
      env:
        WORKING_DIRECTORY: ./test
      run: |
        echo Setting up enironment variables.
        echo "::set-env name=WORKING_DIRECTORY::$WORKING_DIRECTORY"

    - name: Install terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      id: init
      run: terraform init
      working-directory: ${{env.WORKING_DIRECTORY}}

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      working-directory: ${{env.WORKING_DIRECTORY}}

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true
      working-directory: ${{env.WORKING_DIRECTORY}}

    - uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const tfInitStatus = ${{steps.init.outputs.exitcode == 0}} ? ':white_check_mark:' : ':x:'
          const tfValidationStatus = ${{steps.validate.outputs.exitcode == 0}} ? ':white_check_mark:' : ':x:'
          const tfPlanStatus = ${{steps.plan.outputs.exitcode == 0}} ? ':white_check_mark:' : ':x:'

          const output = `${tfInitStatus} Terraform Initialization
          ${tfValidationStatus} Terraform Validation
          ${tfPlanStatus} Terraform Plan

          <details><summary>Show Plan</summary>

          \`\`\`${process.env.PLAN}\`\`\`

          </details>

          *User*: @${{ github.actor }}
          *Action*: \`${{ github.event_name }}\`
          *Working Directory*: \`${{ env.WORKING_DIRECTORY }}\`
          *Workflow*: \`${{ github.workflow }}\``;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
